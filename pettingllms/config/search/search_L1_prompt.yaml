defaults:
  - ../ppo_trainer@models.model_0.ppo_trainer_config: eval
  - _self_


specialization: "prompt" # prompt, lora, full
resource:
  nnodes: 1
  n_gpus_per_node: 8
  trust_remote_code: true

# Environment configuration (shared by all agents)
env:
  name: search_env
  dataset: "search"
  benchmark: "bamboogle"  # Supported benchmarks for validate: bamboogle, 2wiki, hotpotqa, musique
  max_turns: 5
  resolve: false
  multi_modal: false
  batched_init: true


base_models:
  policy_0:
    path: "your base model path"
    name: "shared_model"
  

# Multi-agent configuration for two policies
agent_policy_configs:
  # Number of agents to train
  num_agents: 2
  policy_list: ["search_reasoning_agent", "web_search_agent"]
  agent_configs:
    agent_0:
      name: "search_reasoning_agent"
      policy_name: "shared_model"
      enable_thinking: true
      train_temperature: 1.0
      val_temperature: 0

    agent_1:
      name: "web_search_agent"
      policy_name: "shared_model"
      enable_thinking: false
      train_temperature: 1.0
      val_temperature: 0


# Multi-agent interaction configuration
multi_agent_interaction:
  # Turn order for agents (list of agent names)
  turn_order: ["search_reasoning_agent", "web_search_agent"]
  # Number of agents that interact per episode
  num_interacting_agents: 2
  parallel: true


training:
  device: cuda
  total_training_steps: 200
  project_name: pettingllms
  experiment_name: search_eval
  logger: [ 'console', 'wandb' ]
  model_checkpoints_dir: checkpoints
  ray_wait_register_center_timeout: 300
  train_batch_size: 32
  train_sample_num: 8
  validate_sample_num: 5
  sample_temperature: 1
  val_freq: 10
  resample_freq: 3
  epoch_size: 20
  max_prompt_length: 4096
  max_response_length: 2048
  lora_rank: ${lora_rank}
  lora_alpha: ${lora_alpha}


models:
  model_0:
    path: ${base_models.policy_0.path}
    name: ${base_models.policy_0.name}
    ppo_trainer_config:
      filter_method: mean
      filter_ratio: 0.5
      data: 
        max_prompt_length: ${training.max_prompt_length}
        max_response_length: ${training.max_response_length}
      actor_rollout_ref:
        model:
          path: ${base_models.policy_0.path}
        rollout:
          temperature: ${training.sample_temperature}
          prompt_length: ${training.max_prompt_length}
          response_length: ${training.max_response_length}
          tensor_model_parallel_size: ${resource.n_gpus_per_node}
        trainer:
          n_gpus_per_node: ${resource.n_gpus_per_node}
          n_training_gpus_per_node: ${resource.n_gpus_per_node}
          default_local_dir: ${trainer.default_local_dir}


