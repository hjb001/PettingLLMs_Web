# python venv
pettingllms_venv/*

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
scripts/train/
data/
requiements_venv_cu128.txt
default/
# C extensions
*.so
external/
# Distribution / packaging
.Python
build/
develop-eggs/
dist/
datasets/
downloads/
eggs/
.eggs/
lib/
lib64/
log/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.pettingllms
env/

ENV/
env.bak/
pettingllms.bak/

# Virtual environment directories
pettingllms/bin/
pettingllms/lib/
pettingllms/lib64/
pettingllms/include/
pettingllms/pyvenv.cfg
.pettingllms/bin/
.pettingllms/lib/
.pettingllms/lib64/
.pettingllms/include/
.pettingllms/pyvenv.cfg

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site
# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# PyPI configuration file
.pypirc

# DS_Store
.DS_Store


data/.cache/
**/cache/
*.egg-info/
pettingllms.egg-info/
ragen.egg-info/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.vim/
.nvim/

# OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini

# Temporary files
*.tmp
*.temp
*.bak
*.backup
test.txt
training.txt

# Ignore verl script outputs.
**/outputs/
**/wandb/
**/checkpoints/
verl/*

# Machine Learning and AI specific
models/
*.model
*.pkl
*.pickle
*.h5
*.hdf5
*.pth
*.pt
*.onnx
*.tflite
runs/
tensorboard/
mlruns/
lightning_logs/
.neptune/

# Hugging Face cache
.cache/
huggingface_hub/

# Ignore parquet files.
data/* 

pettingllms/data/preprocess/*.json
pettingllms/data/preprocess/code/*.json
pettingllms/data/preprocess/math/*.json
tmp/

# Ignore debug logs and run result logs
logs/

# Ignore the big datasets
pettingllms/data/test/code/taco.json
pettingllms/data/train/code/taco.json
pettingllms/data/train/math/olympiad.json
pettingllms/data/test/code/livecodebench.json
pettingllms/data/train/code/livecodebench.json
pettingllms/data/train/code/kodcode.json
pettingllms/data/train/code/primeintellect.json
pettingllms/data/train/code/primeintellect_dedupe.json

# Build and deployment
dist/
build/
*.tar.gz
*.zip
*.rar
*.7z

# Version control
.git/
.git-credentials

# Documentation build
docs/_build/
site/
_site/
.jekyll-cache/
.sass-cache/

# Local configuration
local_config.py
local_settings.py
.local/
config.local.*
